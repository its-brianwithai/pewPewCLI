---
description: Apply when versioning software releases, maintaining changelogs, or setting up automated release processes (like semantic-release). Enforces strict Semantic Versioning (MAJOR.MINOR.PATCH), maintaining a clear `CHANGELOG.md` (e.g., Keep a Changelog format), and potentially using conventional commits for automation. Relevant for any project, especially libraries and CLIs.
globs:
alwaysApply: false
---

# Semantic Versioning and Changelogs

## Critical Rules

-   Adhere strictly to Semantic Versioning (SemVer) 2.0.0 (MAJOR.MINOR.PATCH):
    -   Increment **MAJOR** version for incompatible API changes (breaking changes).
    -   Increment **MINOR** version for adding functionality in a backward-compatible manner.
    -   Increment **PATCH** version for backward-compatible bug fixes.
-   Maintain a `CHANGELOG.md` file in the project root.
-   Follow a standard changelog format, such as [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).
    -   Group changes under headings like `Added`, `Changed`, `Fixed`, `Removed`, `Deprecated`, `Security`.
    -   Include the version number and release date for each entry.
    -   Keep an `[Unreleased]` section at the top for ongoing changes.
-   Write changelog entries in clear, user-focused language. Explain the impact of changes.
-   Update the version number in `package.json` (or relevant build files) and the `CHANGELOG.md` before tagging and releasing a new version.
-   Use Git tags (e.g., `v1.2.3`) to mark release points in the version control history.
-   Consider using Conventional Commits (e.g., `feat:`, `fix:`, `BREAKING CHANGE:`) to enable automated version bumping and changelog generation using tools like `semantic-release`.

## Examples

<example>
  **CHANGELOG.md:**
  ```md
  # Changelog
  All notable changes to this project will be documented in this file.

  ## [Unreleased]

  ### Added
  - New `--json` flag for machine-readable output.

  ## [1.1.0] - 2023-10-27

  ### Added
  - `init` command to scaffold a new configuration file.
  - Support for configuration via environment variables.

  ### Fixed
  - Resolved issue where `-v` flag was ignored.

  ## [1.0.1] - 2023-10-20

  ### Fixed
  - Corrected typo in help message for the `run` command.

  ## [1.0.0] - 2023-10-15
  - Initial release.
  ```
  **package.json:**
  ```json
  {
    "name": "my-versioned-cli",
    "version": "1.1.0" // Matches latest release in changelog
  }
  ```
  **Git tag:** `git tag v1.1.0`
  **Conventional Commit Example:** `feat: add init command to scaffold config` (would trigger minor release)
</example>

<example type="invalid">
  **CHANGELOG.md:** (Poor format, unclear versions)
  ```md
  # Changes
  - added init
  - fixed bug with -v
  - first version
  - added json output
  - fixed typo
  ```
  **package.json:**
  ```json
  {
    "name": "my-unversioned-cli",
    "version": "latest" // Invalid versioning
  }
  ```
  **Git History:** No tags marking releases. Commits like `stuff`, `more fixes`.
</example>